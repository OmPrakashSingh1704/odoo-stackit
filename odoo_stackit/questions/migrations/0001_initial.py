# Generated by Django 5.2.4 on 2025-07-12 07:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("comments", "0001_initial"),
        ("user_profile", "0003_userprofile_groups_userprofile_is_superuser_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name_plural": "Tags",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("solved", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="questions",
                        to="user_profile.userprofile",
                    ),
                ),
                (
                    "initial_comments",
                    models.ManyToManyField(
                        blank=True,
                        related_name="initial_questions",
                        to="comments.comments",
                    ),
                ),
                (
                    "solvedanswer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="solved_questions",
                        to="comments.comments",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, null=True, related_name="tags", to="questions.tag"
                    ),
                ),
            ],
        ),
    ]
